---
layout: posts
title:  "2023.08.16 수요일"
date:   2023-08-16 21:00:00 +0900
categories: TIL
---
---
# 자바스크립트의 데이터 타입
## 기본형 (Primitive type)
1. string
2. number
3. bigint
4. boolean
5. symbol
6. undefined
7. null
## 참조형 (Reference type)
1. object
    - array, function, map, set 등등...

# 자바스크립트 데이터 타입별 메모리 저장 방법
## 기본형 (Primitive type)
![image](https://i.imgur.com/S9rzkS1.jpg)
기본 데이터 타입은 선언 시 변수 영역에 할당된다. 그 후, 할당이 일어나면 데이터 영역에 값을 생성하고 그 위치를 가지고 있게 된다. 만약, 재할당이 일어나면 새 데이터 영역에 값을 생성하고 그 주소값을 가지고 있게 된다. 기존 주소를 통해 값만 바꾸는 방식을 사용하지 않는 이유는 데이터 영역에 있는 기본형 값은 바꿀 수 없기 때문인데, 이를 불변성을 가진다고 한다. 상수(const)는 값을 변경할 수 없다고 하는데, 정확히는 데이터 영역을 가리키는 주소값을 바꿀 수 없는 것이라고 보면 된다.
![image](https://i.imgur.com/JtjG9vT.jpg)
참조 데이터 타입은 기본적으로 기본형 데이터 타입과 비슷하다. 다만, 값을 가지기까지 주소 참조를 한 번 더 해야한다. 위 그림처럼 객체 자체가 데이터 영역의 어딘가에 프로퍼티의 개수만큼 각각 주소값을 가지고 있고, 그 주소값은 값을 가진 또 다른 데이터 영역을 가리키고 있다. 프로퍼티에게 할당된 주소값을 변경할 수 있기 때문에, 기본 데이터 타입과 다르게 가변성이 있다고 표현한다.
## 가비지 컬렉터
앞서 나온 내용처럼 변수가 가진 값을 변경하려면 새 데이터 영역을 할당한 후 값을 넣어줘야 한다. 이 때, 더 이상 사용되지 않는 값이 계속 쌓이면 메모리가 부족해지게 된다. 이를 막기 위해 가비지 컬렉터는 참조 카운트를 이용해 이런 데이터들을 추적해 메모리 할당을 해제 해주는 기능을 한다. 프로그래머가 제어할 수 없고, 자동으로 일어난다.
## 객체의 복사
앞서 본 내용처럼 객체의 프로퍼티는 특정 주소를 가지고 있기 때문에 객체를 복사하기 위해 단순하게 할당 연산자를 사용한다면 프로퍼티가 가리키는 주소값이 같게 된다. 이 상태에서 프로퍼티에 접근해 값을 바꾼다면 두 개체가 같이 영향을 받게 된다.
### 얕은 복사
객체가 가리키는 프로퍼티 영역을 다르게 하고, 그 프로퍼티들이 가리키는 영역은 복사 대상의 프로퍼티와 같게 만드는 복사 방법이다. 여전히, 객체 안에 객체가 있으면 문제가 생긴다.
### 깊은 복사
얕은 복사로 해결이 안되는 객체 안에 객체가 있을 때 사용하는 방법으로, 주로 재귀를 활용하여 구현한다.