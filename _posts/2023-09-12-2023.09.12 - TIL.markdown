---
layout: posts
title:  "2023.09.12 화요일"
date:   2023-09-12 21:00:00 +0900
categories: TIL
---
---
# Inversion of Control (IoC, 제어 반전)
IoC는 디자인 패턴 중의 하나로, 프로그램이 라이브러리 혹은 프레임워크를 호출하는 것이 아닌 라이브러리나 프레임워크가 프로그램을 호출하게 하는 것을 말한다. 즉, 흐름 제어를 라이브러리 및 프레임워크가 하게 되는 것을 말한다.
## Dependency Injection (DI, 의존성 주입)
DI는 IoC를 앞서 말한 제어 반전을 위한 기법 중 하나로, 사용할 객체를 직접 호출해서 사용하는 것이 아닌 주입 받아서 사용하게 만드는 것을 말한다. DI는 기능의 사용과 세부 내용을 분리해주는데, 이는 기능의 고유한 인터페이스만 알고 세부 내용은 알 필요가 없게 된다는 의미이다. 따라서, 결합도를 낮춰주어 코드 재사용성을 높여주고 유지보수를 편하게 만들어 준다.

# Provider
NestJS의 Provider는 의존성을 주입받을 수 있는, 특정 기능을 수행하는 가장 작은 단위의 컴포넌트를 말한다. service, repository, middleware 등이 이에 속한다.
## @Injectable()
@Injectable()이라는 데코레이터를 사용하면, NestJS의 Ioc container가 의존성을 주입해야 하는 대상으로 인식하게 되어 Provider가 될 수 있다.