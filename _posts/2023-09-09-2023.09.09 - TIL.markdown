---
layout: posts
title:  "2023.09.09 토요일"
date:   2023-09-09 21:00:00 +0900
categories: TIL
---
---
# 테스트 코드
테스트 코드란 말 그대로 작성한 코드를 테스트하는 코드이다. 주로, 오류와 결함을 찾아내기 위해 작성하며 서비스의 품질을 올려주는데 큰 기여를 한다.
## 테스트의 단위
1. 단위 테스트 (Unit Test)
   - 가장 작은 단위의 기능을 테스트한다. 함수 하나가 될 수도, 클래스 하나가 될 수도 있다.
2. 통합 테스트 (Integration Test)
   - 단위 테스트보다는 큰, E2E 테스트보다는 작은 단위의 테스트이다. API 하나, 계층 하나가 될 수도 있다.
3. E2E 테스트 (End-to-end Test)
   - 끝에서 끝을 의미하는 테스트로, 가장 큰 테스트 단위이다. 전체 시스템 플로우를 따라가며 전부 테스트 해본다고 생각하면 된다.

# Jest
javascript 및 typescript에서 사용할 수 있는 테스트 프레임워크이다. 프론트엔드에서 주로 사용하는 라이브러리인 React.js와도 궁합이 좋고, 단순하고 직관적인 API, CI 지원 등 여러 이유로 폭발적인 점유율 성장을 한 프레임워크이다.
## 단위 테스트 파일 생성
주로 테스트 할 파일 이름과 똑같이 작성한 뒤, .spec을 붙여서 생성한다. 예를 들어, posts.repository.js를 테스트하고 싶은 경우 posts.repository.spec.js 이런식으로 작성한다.
## 단위 테스트 코드 작성
``` javascript
test((테스트 이름), () => {
  expect((값)).toEqual(값);
});
```
통상적으로 작성하는 방법이다. 위의 콜백 함수에 단위 테스트 코드가 들어가며, expect().toEqual(); 이 메소드 체이닝에서 expect 인자 값과 toEqual의 인자 값이 같은지를 판단한 후 맞다면 테스트 통과, 틀리다면 테스트 미통과를 호출한다.