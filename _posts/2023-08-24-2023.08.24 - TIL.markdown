---
layout: posts
title:  "2023.08.24 목요일"
date:   2023-08-24 21:00:00 +0900
categories: TIL
---
---
# Node.js
Node.js는 V8 엔진과 비동기 이벤트 처리 라이브러리인 libuv가 합쳐진 자바스크립트 런타임이다.
## Node.js 철학
꼭 지킬 필요는 없지만, 기본적으로 Node.js가 추구하는 방향성이다. 전체적으로 가볍게, 단순하게를 강조하고 있다.
### 경량 코어
최소한으로 필요한 시스템만을 구축하고, 코어의 바깥 부분에 userland 혹은 userspace라 불리는 모듈 공간을 두어야 한다는 말이다. 이 원칙으로 Node.js는 빠르고 폭 넓게 성장할 수 있었다.
### 경량 모듈
코어도 최소한이지만, 사용자가 필요에 의해 사용하는 각종 모듈들 역시 최소한으로 가볍게 설계되어야 한다. 이를 통해 재사용성 측면을 올려주고, 테스트 및 유지보수가 용이해지며, 좋은 사용성이라는 장점이 생긴다.
### 작은 외부 인터페이스
진입점은 작아야 한다. 즉, 최소한의 진입점이나 클래스를 노출시키도록 설계해야 한다. 이는 구현 단순화로 유지보수를 한층 더 용이하게 해준다.
### 간결함과 실용주의
단순하고 간결해야 한다. 즉, 너무 불필요한 기능까지 구현하지 않아야 한다는 말이다. 이는 높은 생산성을 가져다준다.
## Node.js 특성
### 이벤트 루프 기반
libuv 라이브러리는 리액터 패턴을 구현하고 있고, Node.js는 그 리액터 패턴의 이벤트 루프를 기반으로 작동한다. 이벤트 루프는 네트워크 요청과 같은 시간이 오래 걸리는 작업을 진행할 때, 다른 작업들을 진행하지 못하는 블로킹 문제를 해결하기 위해 도입한 방법이다. 이벤트 루프는 호출 스택과 이벤트 큐를 관찰하다가 호출 스택이 비었을 때 이벤트 큐에 있는 작업들을 호출 스택으로 이동시켜 실행될 수 있게 한다.
### 논블로킹 I/O
Node.js는 앞서 말한 이벤트 루프 덕분에 비동기 작업을 원활하게 처리할 수 있다. 그래서 이를 활용하여 시간이 긴 작업들을 비동기 처리하면 프로그램을 논블로킹 방식으로 작동하게 할 수 있다.
### 싱글 스레드 기반
Node.js는 기본적으로 싱글 스레드를 기반으로 작동한다. 정확히는, 직접 다룰 수 있는 스레드가 하나이기 때문에 싱글 스레드 기반이라고 한다. 그럼에도 Node.js는 위의 이벤트 루프를 기반으로 한 비동기 처리, libuv가 시스템 커널에게 일부 작업을 위임해 어느정도 가질 수 있는 동시성 덕분에 많은 요청을 효율적으로 처리할 수 있다.
## 정리
Node.js는 프론트엔드에 사용되는 언어와 같은 언어로 작동한다는 점, 싱글 스레드 기반으로 작동하기 때문에 오는 설계적 난이도의 이점, 그리고 그 난이도에 비해 높은 처리 속도와 효율을 가지기 때문에 웹 백엔드 런타임으로 많은 사랑을 받고 있다.