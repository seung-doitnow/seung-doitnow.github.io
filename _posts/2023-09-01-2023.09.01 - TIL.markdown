---
layout: posts
title:  "2023.09.01 금요일"
date:   2023-09-01 21:00:00 +0900
categories: TIL
---
---
# SQL
관계형 데이터베이스의 사용이 늘어나면서 여러 데이터베이스가 생기게 되었고, 이에 관계형 데이터베이스를 다루는데 공통적으로 사용될 수 있는 프로그래밍 언어의 필요성 역시 같이 증가하게 되었다. SQL은 이를 위해 탄생했으며, 현재 많은 관계형 데이터베이스가 이를 표준 언어로 채택하고 있다.
## DDL
데이터를 정의할 때 사용한다. 즉, 데이터 생성 및 수정, 삭제할 때 사용한다.
### CREATE
데이터를 생성한다.
``` SQL
CREATE TABLE (테이블 이름)
(
    테이블 내용
);
```
### DROP
데이터를 삭제한다.
``` SQL
DROP TABLE (테이블 이름);
```
### ALTER
데이터의 속성, 구성 요소를 수정할 때 사용한다.
``` SQL
ALTER TABLE (테이블 이름) ADD (구문); -- column 추가
ALTER TABLE (테이블 이름) DROP (구문); -- column 삭제
ALTER TABLE (테이블 이름) MODIFY (구문); -- column 수정
ALTER TABLE (테이블 이름) RENAME (구문); -- table 이름 수정
```
## DML
데이터를 조작할 때 사용한다.
### SELECT
데이터를 조회할 때 사용한다.
``` SQL
SELECT (컬럼 이름) FROM (테이블 이름) [WHERE (조건)];
```
### INSERT
새 데이터를 삽입할 때 사용한다.
``` SQL
INSERT INTO (테이블 이름) VALUES (데이터);
```
### DELETE
데이터를 삭제할 때 사용한다. WHERE 조건을 지정하지 않으면, 모든 데이터를 삭제하기 때문에 유의하여야 한다.
``` SQL
DELETE FROM (테이블 이름) [WHERE (조건)];
```
### UPDATE
데이터를 수정할 때 사용한다. 역시 DELETE와 마찬가지로 조건을 지정하지 않으면 모든 데이터를 수정하기 때문에 유의하여야 한다.
``` SQL
UPDATE (테이블 이름) SET (컬럼 = 값) [WHERE (조건)];
```
## DCL
데이터베이스 사용자의 접근 권한을 설정할 때 사용한다.
### GRANT
특정 유저에게 권한을 부여할 때 사용한다.
``` SQL
GRANT [권한] ON (객체 이름) TO (사용자 이름);
```
### BEVOKE
특정 유저의 권한을 취소할 때 사용한다.
``` SQL
REVOKE [권한] ON (객체 이름) TO (사용자 이름);
```